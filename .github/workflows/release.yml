name: release

on:
  push:
    tags:
      - "*"

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}
    - name: Build server
      run: cargo build --manifest-path server/Cargo.toml --release
    - name: Build cli
      run: cargo build --manifest-path cli/Cargo.toml --release
    - name: Build watcher
      run: cargo build --manifest-path watcher/Cargo.toml --release
    - name: Package Binaries
      run: |
        mkdir -p release-${{ matrix.os }}
        cp server/target/release/server release-${{ matrix.os }}/
        cp cli/target/release/cli release-${{ matrix.os }}/
        cp watcher/target/release/watcher release-${{ matrix.os }}/
        zip -r release-${{ matrix.os }}.zip release-${{ matrix.os }}
    - name: Upload Binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-${{ matrix.os }}.zip
        asset_name: release-${{ matrix.os }}.zip
        asset_content_type: application/zip

